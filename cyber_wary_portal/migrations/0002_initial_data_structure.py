# Generated by Django 4.0.2 on 2022-02-22 10:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cyber_wary_portal', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('B', 'Blue'), ('R', 'Red')], default='B', help_text='Type of scan being performed.', max_length=1)),
                ('title', models.CharField(help_text='An identifier for a scan.', max_length=32, null=True)),
                ('comment', models.TextField(help_text='Comments or details related to a scan.', max_length=2048, null=True)),
                ('max_devices', models.IntegerField(default=1, help_text='The number of devices that can be attached to a single scan request.', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('scan_key', models.CharField(help_text='A unique key associated with the scan.', max_length=32)),
                ('completed', models.DateTimeField(help_text='The date/time that the scan completed.', null=True)),
                ('expiry', models.DateTimeField(help_text='The expiry date/time that new data can be submitted for a scan.', null=True)),
                ('progress', models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Partially Completed'), (4, 'Completed'), (5, 'Nodata')], default=1, help_text='The current progress/status of a scan.', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('system_users', models.BooleanField(default=False, help_text='Flag for scan of system users.', null=True)),
                ('system_services', models.BooleanField(default=False, help_text='Flag for scan of system services.', null=True)),
                ('browser_passwords', models.BooleanField(default=False, help_text='Flag for scan of passwords stored on the system.', null=True)),
                ('network_adapters', models.BooleanField(default=False, help_text='Flag for scan of network adapters.', null=True)),
                ('network_exposure', models.BooleanField(default=False, help_text='Flag for scan of network exposure.', null=True)),
                ('network_firewall_rules', models.BooleanField(default=False, help_text='Flag for scan of firewall rules.', null=True)),
                ('startup_applications', models.BooleanField(default=False, help_text='Flag for scan of startup applications.', null=True)),
                ('installed_applications', models.BooleanField(default=False, help_text='Flag for scan of installed applications.', null=True)),
                ('installed_patches', models.BooleanField(default=False, help_text='Flag for scan of installed OS updates and patches.', null=True)),
                ('installed_antivirus', models.BooleanField(default=False, help_text='Flag for scan of check of anti-virus product installation.', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('type', models.CharField(help_text='The type of request made.', max_length=32, null=True)),
                ('payload', models.TextField(help_text='The raw payload data.', null=True)),
                ('method', models.IntegerField(choices=[(1, 'Get'), (2, 'Post'), (3, 'Patch'), (4, 'Put'), (5, 'Delete')], default=1, help_text='The type of request that was made.')),
                ('response', models.CharField(default='200', help_text='The response code issued to the request.', max_length=8, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
