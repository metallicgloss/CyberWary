# Generated by Django 4.0.2 on 2022-03-23 18:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cyber_wary_portal', '0008_windows_updates'),
    ]

    operations = [
        migrations.AlterField(
            model_name='operatingsysteminstall',
            name='keyboard',
            field=models.ForeignKey(default='en-GB', help_text='Foreign key to map the keyboard language to an installed language.', on_delete=django.db.models.deletion.SET_DEFAULT, to='cyber_wary_portal.language'),
        ),
        migrations.CreateModel(
            name='CPE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('identifier', models.CharField(help_text='The identifier for the CPE.', max_length=256, null=True)),
                ('title', models.CharField(help_text='The title/name for the software referenced by the CPE.', max_length=192, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CWE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('identifier', models.IntegerField(default=0, help_text='The identifier for the CWE.')),
                ('name', models.CharField(help_text='The name given to the CWE.', max_length=192, null=True)),
                ('description', models.CharField(help_text='The description given to the CWE.', max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CVE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('identifier', models.IntegerField(default=0, help_text='The identifier for the CVE.')),
                ('assigner', models.CharField(help_text='The assigner for the CVE.', max_length=64, null=True)),
                ('description', models.CharField(help_text='The description of the CVE.', max_length=512, null=True)),
                ('cvss', models.CharField(help_text='The CVSS v3 vector string of the CVE.', max_length=64, null=True)),
                ('published', models.DateTimeField(help_text='The date/time that the CVE was published.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        
        migrations.CreateModel(
            name='CVEWeaknesses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('cve', models.ForeignKey(help_text='The CVE that the weakness is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.cve')),
                ('cwe', models.ForeignKey(help_text='The weakness that the CVE is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.cwe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CVEReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('url', models.CharField(help_text='The URL for the reference.', max_length=128, null=True)),
                ('name', models.CharField(help_text='The name for the reference.', max_length=128, null=True)),
                ('source', models.CharField(help_text='The source for the reference.', max_length=128, null=True)),
                ('tags', models.CharField(help_text='The tags associated with the reference.', max_length=128, null=True)),
                ('cve', models.ForeignKey(help_text='The CVE that the reference is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.cve')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CVEMatches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('cpe', models.ForeignKey(help_text='The CPE that features the CVE.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.cpe')),
                ('cve', models.ForeignKey(help_text='The CVE that the CPE is linked to.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.cve')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(help_text='The name of the publisher.', max_length=128, null=True)),
                ('logo', models.CharField(help_text='The logo of the publisher.', max_length=256, null=True)),
                ('website', models.CharField(help_text='The associated website of the publisher.', max_length=256, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('name', models.CharField(help_text='The name given to the software (Comments).', max_length=128, null=True)),
                ('comments', models.CharField(help_text='The comments supplied by the software for its install (DisplayName).', max_length=128, null=True)),
                ('version', models.CharField(help_text='The version of the software installed (DisplayVersion).', max_length=32, null=True)),
                ('version_major', models.CharField(help_text='The major version of the software installed (VersionMajor).', max_length=8, null=True)),
                ('version_minor', models.CharField(help_text='The minor version of the software installed (VersionMinor).', max_length=16, null=True)),
                ('install_path', models.CharField(help_text='The path for the software installation (InstallSource/InstallLocation).', max_length=256, null=True)),
                ('install_date', models.DateField(help_text='The date that the software was originally installed (InstallDate).', null=True)),
                ('system_component', models.BooleanField(default=False, help_text='The flag to identify if the software is a default system component (SystemComponent).')),
                ('publisher', models.ForeignKey(help_text='The publisher that the software is associated with (Publisher).', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.publisher')),
                ('scan_record', models.ForeignKey(help_text='The scan record that the software/installation is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.scanrecord')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
