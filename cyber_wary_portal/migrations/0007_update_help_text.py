# Generated by Django 4.0.2 on 2022-03-22 19:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cyber_wary_portal', '0006_windows_defender'),
    ]

    operations = [
        migrations.RenameField(
            model_name='browser',
            old_name='browser_name',
            new_name='name',
        ),
        migrations.AlterField(
            model_name='browser',
            name='name',
            field=models.CharField(help_text='The name of the browser', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='apirequest',
            name='method',
            field=models.IntegerField(choices=[(1, 'Get'), (2, 'Post'), (3, 'Patch'), (4, 'Put'), (5, 'Delete')], default=1, help_text='The method of the request that was used.'),
        ),
        migrations.AlterField(
            model_name='apirequest',
            name='payload',
            field=models.TextField(help_text='The raw request payload data.', null=True),
        ),
        migrations.AlterField(
            model_name='apirequest',
            name='type',
            field=models.CharField(help_text='The name/type of the request made.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='apirequest',
            name='user',
            field=models.ForeignKey(help_text='The system user that is associated with the api request call.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='biosinstall',
            name='bios',
            field=models.ForeignKey(help_text='The version of the BIOS that the install is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.bios'),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='browser',
            field=models.ForeignKey(help_text='The browser that the credential has been captured from.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.browser'),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='compromised',
            field=models.BooleanField(default=False, help_text='The flag to identify if the password has appeared in a data breach.'),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='credential_scan',
            field=models.ForeignKey(help_text='The credential scan group that the credential is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.credentialscan'),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='filename',
            field=models.CharField(help_text='The filename on the system that the credential was captured from.', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='occurrence',
            field=models.IntegerField(default=0, help_text='The number of times that the password has been seen in a data breach.'),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='password_strength',
            field=models.IntegerField(choices=[(1, 'Very Weak'), (2, 'Weak'), (3, 'Medium'), (4, 'Strong'), (5, 'Very Strong')], default=3, help_text='The strength of the password associated with the credential.', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='storage',
            field=models.DateTimeField(help_text='The date/time that the credential was created/stored.', null=True),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='url',
            field=models.CharField(help_text='The URL that the credential is associated with.', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='credentialrecord',
            name='username',
            field=models.CharField(help_text='The username/email address associated with the credential.', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='credentialscan',
            name='progress',
            field=models.IntegerField(choices=[(1, 'Pending'), (2, 'In Progress'), (3, 'Partially Completed'), (4, 'Completed')], default=1, help_text='The current progress/status of the credential processing.', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='credentialscan',
            name='scan_record',
            field=models.ForeignKey(help_text='The scan record that the credential scan group is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.scanrecord'),
        ),
        migrations.AlterField(
            model_name='language',
            name='locale',
            field=models.CharField(help_text='The locale identifier of the language.', max_length=5, null=True),
        ),
        migrations.AlterField(
            model_name='language',
            name='string',
            field=models.CharField(help_text='The readable name of the language', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='operatingsystem',
            name='name',
            field=models.CharField(help_text='The readable name of the operating system.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='operatingsystem',
            name='version',
            field=models.CharField(help_text='The version of the operating system.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='operatingsysteminstall',
            name='operating_system',
            field=models.ForeignKey(help_text='The operating system version that the installation is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.operatingsystem'),
        ),
        migrations.AlterField(
            model_name='operatingsysteminstall',
            name='serial',
            field=models.CharField(help_text='The serial number issued to the operating system installation.', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='scan',
            name='browser_passwords',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include browser passwords stored on the system.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='comment',
            field=models.TextField(help_text='Comments or additional details related to a scan.', max_length=2048, null=True),
        ),
        migrations.AlterField(
            model_name='scan',
            name='installed_antivirus',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include check of anti-virus product installation.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='installed_applications',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include installed applications.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='installed_patches',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include installed OS updates and patches.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='network_adapters',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include network adapter settings.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='network_exposure',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include network exposure (log4j).'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='network_firewall_rules',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include firewall rules.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='startup_applications',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include startup applications.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='system_users',
            field=models.BooleanField(default=False, help_text='The flag for the scan to include system users.'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='title',
            field=models.CharField(help_text='A user-defined identifier for a scan.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='scan',
            name='type',
            field=models.CharField(choices=[('B', 'Blue'), ('R', 'Red')], default='B', help_text='Type of scan being performed (red - offensive / blue - defensive).', max_length=1),
        ),
        migrations.AlterField(
            model_name='scanrecord',
            name='bios_install',
            field=models.ForeignKey(help_text='The BIOS install that the record is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.biosinstall'),
        ),
        migrations.AlterField(
            model_name='scanrecord',
            name='current_user',
            field=models.CharField(help_text='The name of the user performing the scan.', max_length=48, null=True),
        ),
        migrations.AlterField(
            model_name='scanrecord',
            name='os_install',
            field=models.ForeignKey(help_text='The Operating System install that the record is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.operatingsysteminstall'),
        ),
        migrations.AlterField(
            model_name='scanrecord',
            name='scan',
            field=models.ForeignKey(help_text='The scan that the record is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.scan'),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='description',
            field=models.CharField(help_text='The description of the user account (Description).', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='enabled',
            field=models.BooleanField(default=False, help_text='The status of the user account within the system (Enabled).'),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='full_name',
            field=models.CharField(help_text='The full readable name of the user account (FullName).', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='last_logon',
            field=models.DateTimeField(help_text='The last logon date for the user account (LastLogon).', null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='name',
            field=models.CharField(help_text='The username of the user account (Name).', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='password_changeable',
            field=models.DateTimeField(help_text='The date/time that the password is required to be changed by (PasswordChangeableDate).', null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='password_expiry',
            field=models.DateTimeField(help_text='The date/time that the current password defined on the user account will expire (PasswordExpires).', null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='password_last_set',
            field=models.DateTimeField(help_text='The date/time of the last time the password for the account was updated or changed (PasswordLastSet).', null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='password_permission',
            field=models.BooleanField(default=False, help_text='The flag to identify if the account is able to change its password (UserMayChangePassword).'),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='password_required',
            field=models.BooleanField(default=False, help_text='The flag to identify if a password reset is required on the account (PasswordRequired).'),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='scan_record',
            field=models.ForeignKey(help_text='The scan record that the user is associated with.', on_delete=django.db.models.deletion.CASCADE, to='cyber_wary_portal.scanrecord'),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='sid',
            field=models.CharField(help_text='The security identifier of the user account (SID/AccountDomainSid).', max_length=48, null=True),
        ),
        migrations.AlterField(
            model_name='userrecord',
            name='source',
            field=models.IntegerField(choices=[(1, 'Local'), (2, 'Microsoft')], default=1, help_text='The type of user account (Microsoft or Local) (PrincipalSource).', validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.RenameModel(
            old_name='CredentialRecord',
            new_name='Credential',
        ),
        migrations.RenameModel(
            old_name='UserRecord',
            new_name='User',
        ),
        migrations.RenameField(
            model_name='operatingsysteminstalledlanguages',
            old_name='installed_language',
            new_name='language',
        ),
        migrations.RenameField(
            model_name='operatingsysteminstalledlanguages',
            old_name='operating_system_installation',
            new_name='os_install',
        ),
    ]
